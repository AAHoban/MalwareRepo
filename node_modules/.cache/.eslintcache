[{"C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\index.js":"1","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\App.js":"2","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\components\\Navbar.js":"3","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\pages\\Login.js":"4","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\pages\\Dashboard.js":"5","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\pages\\Home.js":"6","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\pages\\Register.js":"7","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\api\\axios.js":"8","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\context\\AuthProvider.js":"9"},{"size":326,"mtime":1665247463689,"results":"10","hashOfConfig":"11"},{"size":686,"mtime":1665247463681,"results":"12","hashOfConfig":"11"},{"size":1149,"mtime":1665247463683,"results":"13","hashOfConfig":"11"},{"size":3134,"mtime":1665247463691,"results":"14","hashOfConfig":"11"},{"size":389,"mtime":1665247463690,"results":"15","hashOfConfig":"11"},{"size":227,"mtime":1665247463690,"results":"16","hashOfConfig":"11"},{"size":5274,"mtime":1665247463692,"results":"17","hashOfConfig":"11"},{"size":102,"mtime":1665247463682,"results":"18","hashOfConfig":"11"},{"size":356,"mtime":1665247463684,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16thz3q",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\index.js",[],[],"C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\App.js",[],[],"C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\components\\Navbar.js",[],[],"C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\pages\\Login.js",["50"],[],"import { useRef, useState, useEffect, useContext } from 'react';\r\nimport AuthContext from \"../context/AuthProvider\";\r\nimport '../css/Login.css';\r\n\r\nimport axios from '../api/axios';\r\nconst LOGIN_URL = '/auth';\r\n\r\n\r\nfunction Login() {\r\n    const { setAuth } = useContext(AuthContext);\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [pwd, setPwd] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post(LOGIN_URL,\r\n                JSON.stringify({ user, pwd }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response));\r\n            const accessToken = response?.data?.accessToken;\r\n            const roles = response?.data?.roles;\r\n            setAuth({ user, pwd, roles, accessToken });\r\n            setUser('');\r\n            setPwd('');\r\n            setSuccess(true);\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 400) {\r\n                setErrMsg('Missing Username or Password');\r\n            } else if (err.response?.status === 401) {\r\n                setErrMsg('Unauthorized');\r\n            } else {\r\n                setErrMsg('Login Failed');\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n        {success ? (\r\n            <h1>Welcome</h1>\r\n        ) : (\r\n        <div>\r\n            <form className='loginForm' onSubmit={handleSubmit}>\r\n            <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                <h1>Login</h1>\r\n                <input \r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    ref={userRef}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                    value={user}\r\n                    placeholder='Username'\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                    value={pwd}\r\n                    placeholder='Password'\r\n                    required\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Login\" \r\n                    class=\"btn1\" \r\n                />\r\n                <p>Don't have an account? <a href='/register'>SignUp</a></p>\r\n            </form>\r\n        </div>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\pages\\Dashboard.js",[],[],[],"C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\pages\\Home.js",[],[],"C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\pages\\Register.js",["51","52","53","54","55"],[],"import { useRef, useState, useEffect } from 'react';\r\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/Register.css\";\r\nimport axios from '../api/axios';\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%-_]).{8,24}$/;\r\nconst REGISTER_URL = '/register';\r\n\r\nconst Register = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setValidName(USER_REGEX.test(user));\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        setValidPwd(PWD_REGEX.test(pwd));\r\n        setValidMatch(pwd === matchPwd);\r\n    }, [pwd, matchPwd])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with JS hack\r\n        const v1 = USER_REGEX.test(user);\r\n        const v2 = PWD_REGEX.test(pwd);\r\n        if (!v1 || !v2) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ user, pwd }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            // TODO: remove console.logs before deployment\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response))\r\n            setSuccess(true);\r\n            //clear state and controlled inputs\r\n            setUser('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 409) {\r\n                setErrMsg('Username Taken');\r\n            } else {\r\n                setErrMsg('Registration Failed')\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n        {success ? (\r\n            <div>\r\n                <h1>Registered</h1>\r\n                <a href='/login'>Login</a>\r\n            </div>\r\n        ) : (\r\n            <div>\r\n                <form onSubmit={handleSubmit} className='registerForm'>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Register</h1>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        ref={userRef}\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setUser(e.target.value)}\r\n                        placeholder=\"Username\"\r\n                        required \r\n                        aria-invalid={validName ? \"false\" : \"true\"}\r\n                        aria-describedby=\"uidnote\"\r\n                        onFocus={() => setUserFocus(true)}\r\n                        onBlur={() => setUserFocus(false)}\r\n                    />\r\n\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        onChange={(e) => setPwd(e.target.value)}\r\n                        value={pwd}\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                        aria-describedby=\"pwdnote\"\r\n                        onFocus={() => setPwdFocus(true)}\r\n                        onBlur={() => setPwdFocus(false)}\r\n                    />\r\n\r\n                    <input \r\n                        type=\"password\"\r\n                        id=\"confirm_pwd\"\r\n                        onChange={(e) => setMatchPwd(e.target.value)}\r\n                        value={matchPwd}\r\n                        placeholder=\"Confirm Password\"\r\n                        required\r\n                        aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                        aria-describedby=\"confirmnote\"\r\n                        onFocus={() => setMatchFocus(true)}\r\n                        onBlur={() => setMatchFocus(false)}\r\n                    />\r\n\r\n                    <button class=\"btn1\" disabled={!validName || !validPwd || !validMatch ? true : false}>\r\n                        Create an Account\r\n                    </button>\r\n                    <p>Already have an account?<a href='/login'>SignIn</a></p>\r\n                </form>\r\n            </div>\r\n        )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\api\\axios.js",[],[],"C:\\Users\\ali-v\\OneDrive\\Desktop\\Cora\\cora\\MalwareRepo\\src\\context\\AuthProvider.js",[],[],{"ruleId":"56","severity":1,"message":"57","line":28,"column":39,"nodeType":"58","endLine":28,"endColumn":51},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":22},{"ruleId":"59","severity":1,"message":"63","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":25},{"ruleId":"59","severity":1,"message":"64","line":17,"column":12,"nodeType":"61","messageId":"62","endLine":17,"endColumn":21},{"ruleId":"59","severity":1,"message":"65","line":21,"column":12,"nodeType":"61","messageId":"62","endLine":21,"endColumn":20},{"ruleId":"59","severity":1,"message":"66","line":25,"column":12,"nodeType":"61","messageId":"62","endLine":25,"endColumn":22},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'faInfoCircle' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'userFocus' is assigned a value but never used.","'pwdFocus' is assigned a value but never used.","'matchFocus' is assigned a value but never used."]